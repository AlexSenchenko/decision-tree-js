var dt=function(){function n(a,c){var d={},e;for(e in a){var b=a[e][c];d[b]=d[b]?d[b]+1:1}return d}function q(a,c){var d=n(a,c),e=0,b;for(b in d)var f=d[b]/a.length,e=e+-f*Math.log(f);return e}function r(a,c){var d=n(a,c),e=0,b,f;for(f in d)d[f]>e&&(e=d[f],b=f);return b}function s(a){var c=a.trainingSet,d=a.minItemsCount,e=a.categoryAttr,b=a.entropyThrehold,f=a.maxTreeDepth,t=a.predicates;if(0==f||c.length<=d)return{category:r(c,e)};d=q(c,e);if(d<=b)return{category:r(c,e)};var b={gain:0},m;for(m in c){var h=
c[m],l;for(l in h)if(l!=e)for(var u in t){var g;g=c;var v=l,w=t[u],k=h[l],x={match:[],notMatch:[]},n=void 0;for(n in g){var y=g[n],p=y[v];null!=p&&w(p,k)?x.match.push(y):x.notMatch.push(y)}g=x;v=q(g.match,e);w=q(g.notMatch,e);k=0;k+=v*g.match.length;k+=w*g.notMatch.length;k/=c.length;g.gain=d-k;0<g.gain&&b.gain<g.gain&&(b=g,b.predicateName=u,b.predicate=t[u],b.attribute=l,b.pivot=h[l])}}if(0>=b.gain)return{category:r(c,e)};a.maxTreeDepth=f-1;a.trainingSet=b.match;c=s(a);a.trainingSet=b.notMatch;a=
s(a);return{attribute:b.attribute,predicate:b.predicate,predicateName:b.predicateName,pivot:b.pivot,match:c,notMatch:a}}function m(a,c){if(a.category)return a.category;var d=c[a.attribute],e=a.predicate,b=a.pivot;return null!=d&&e(d,b)?m(a.match,c):m(a.notMatch,c)}function z(a,c){for(var d=a.trainingSet,e=[],b=0;b<c;b++){a.trainingSet=[];for(var f=0;f<d.length;f++)0==(f+1)%(b+2)&&a.trainingSet.push(d[f]);f=new p(a);e.push(f)}return e}function p(a){var c={"==":function(a,b){return a==b},">=":function(a,
b){return a>=b},"<=":function(a,b){return a<=b}};if(a.removeDefaultPredicates)for(var d in a.removeDefaultPredicates)delete c[a.removeDefaultPredicates[d]];this.root=s({trainingSet:a.trainingSet,categoryAttr:a.categoryAttr?a.categoryAttr:"category",minItemsCount:a.minItemsCount?a.minItemsCount:1,entropyThrehold:a.entropyThrehold?a.entropyThrehold:0.01,maxTreeDepth:a.maxTreeDepth?a.maxTreeDepth:70,predicates:c});this.predict=function(a){return m(this.root,a)}}var h={};h.DecisionTree=p;h.RandomForest=
function(a,c){this.trees=z(a,c);this.predict=function(a){var c=this.trees,b={},f;for(f in c){var h=c[f].predict(a);b[h]=b[h]?b[h]+1:1}return b}};return h}();