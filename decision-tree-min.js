var dt=function(){function n(a){var c={};if(a.ignoredAttributes)for(var d in a.ignoredAttributes)c[a.ignoredAttributes[d]]=!0;this.root=u({trainingSet:a.trainingSet,ignoredAttributes:c,categoryAttr:a.categoryAttr||"category",minItemsCount:a.minItemsCount||1,entropyThrehold:a.entropyThrehold||0.01,maxTreeDepth:a.maxTreeDepth||70})}function p(a,c){for(var d=a.trainingSet,e=[],b=0;b<c;b++)e[b]=[];for(b=d.length-1;0<=b;b--)e[b%c].push(d[b]);d=[];for(b=0;b<c;b++){a.trainingSet=e[b];var f=new n(a);d.push(f)}this.trees= d}function q(a,c){for(var d={},e=a.length-1;0<=e;e--)d[a[e][c]]=0;for(e=a.length-1;0<=e;e--)d[a[e][c]]+=1;return d}function v(a,c){var d=q(a,c),e=0,b,f;for(f in d)b=d[f]/a.length,e+=-b*Math.log(b);return e}function w(a,c){var d=q(a,c),e=0,b,f;for(f in d)d[f]>e&&(e=d[f],b=f);return b}function u(a){var c=a.trainingSet,d=a.minItemsCount,e=a.categoryAttr,b=a.entropyThrehold,f=a.maxTreeDepth,n=a.ignoredAttributes;if(0==f||c.length<=d)return{category:w(c,e)};d=v(c,e);if(d<=b)return{category:w(c,e)};for(var b= {gain:0},m={},x=c.length-1;0<=x;x--){var p=c[x],k;for(k in p)if(k!=e&&!n[k]){var s=p[k],t;t="number"==typeof s?">=":"==";var r=k+t+s;if(!m[r]){m[r]=!0;var r=C[t],g;g=c;for(var l=k,y=r,h=s,q=[],B=[],z=g.length-1;0<=z;z--){var A=g[z];y(A[l],h)?q.push(A):B.push(A)}g={match:q,notMatch:B};l=v(g.match,e);y=v(g.notMatch,e);h=0;h+=l*g.match.length;h+=y*g.notMatch.length;h/=c.length;l=d-h;l>b.gain&&(b=g,b.predicateName=t,b.predicate=r,b.attribute=k,b.pivot=s,b.gain=l)}}}if(!b.gain)return{category:w(c,e)}; a.maxTreeDepth=f-1;a.trainingSet=b.match;c=u(a);a.trainingSet=b.notMatch;a=u(a);return{attribute:b.attribute,predicate:b.predicate,predicateName:b.predicateName,pivot:b.pivot,match:c,notMatch:a,matchedCount:b.match.length,notMatchedCount:b.notMatch.length}}var C={"==":function(a,c){return a==c},">=":function(a,c){return a>=c}};n.prototype.predict=function(a){a:{for(var c=this.root,d,e,b;;){if(c.category){a=c.category;break a}d=c.attribute;d=a[d];e=c.predicate;b=c.pivot;c=e(d,b)?c.match:c.notMatch}a= void 0}return a};p.prototype.predict=function(a){var c=this.trees,d={},e;for(e in c){var b=c[e].predict(a);d[b]=d[b]?d[b]+1:1}return d};var m={};m.DecisionTree=n;m.RandomForest=p;return m}();